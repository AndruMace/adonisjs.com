{"type":"root","children":[{"type":"element","tag":"dimertitle","props":{},"children":[{"type":"text","value":"Lucid 8.5 - 9.0"}]},{"type":"element","tag":"h1","props":{"id":"lucid-85---90"},"children":[{"type":"element","tag":"a","props":{"href":"#lucid-85---90","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Lucid "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"8.5 - 9.0"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The release notes contains an aggregated list of chances made between "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"@adonisjs/lucid@8.5"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"@adonisjs/lucid@9.0"}]},{"type":"text","value":". You can also check "},{"type":"element","tag":"a","props":{"href":"https://github.com/adonisjs/lucid/releases"},"children":[{"type":"text","value":"individual releases"}]},{"type":"text","value":" on Github."}]},{"type":"element","tag":"div","props":{"className":["toc-container"]},"children":[{"type":"element","tag":"h2","props":{},"children":[{"type":"text","value":"Table of contents"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#changes"},"children":[{"type":"text","value":"Changes"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Upgrade using the following command"}]},{"type":"element","tag":"div","props":{"className":["tabs"]},"children":[{"type":"element","tag":"div","props":{"className":["tab-head"]},"children":[{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{"dataTitle":"tab-1"},"children":[{"type":"text","value":"npm"}]},{"type":"element","tag":"li","props":{"dataTitle":"tab-2"},"children":[{"type":"text","value":"yarn"}]}]}]},{"type":"element","tag":"div","props":{"className":["tab-body"]},"children":[{"type":"element","tag":"div","props":{"className":["tab-item"],"id":"tab-1"},"children":[{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"npm"}]},{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token function\">npm</span> i @adonisjs/lucid@alpha\n"}]}]}]}]},{"type":"element","tag":"div","props":{"className":["tab-item"],"id":"tab-2"},"children":[{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"yarn"}]},{"type":"element","tag":"pre","props":{"className":["language-sh","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token function\">yarn</span> <span class=\"token function\">add</span> @adonisjs/lucid@alpha\n"}]}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"changes"},"children":[{"type":"element","tag":"a","props":{"href":"#changes","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Changes"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"addition"}]},{"type":"text","value":": Accept raw and sub queries in "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"orderBy"}]},{"type":"text","value":" method. "},{"type":"element","tag":"a","props":{"href":"https://github.com/adonisjs/lucid/commit/f1a4335c472308fe25da5ffc493dad9ac96abb18"},"children":[{"type":"text","value":"f1a4335c"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"addition"}]},{"type":"text","value":": Accept raw queries in "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"having"}]},{"type":"text","value":" method. "},{"type":"element","tag":"a","props":{"href":"https://github.com/adonisjs/lucid/commit/5d73de343f941086575a1234aece699ead4e4434"},"children":[{"type":"text","value":"5d73de34"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"addition"}]},{"type":"text","value":": Add "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"whereColumn"}]},{"type":"text","value":" method. It allows writing a where clause that uses column names on the both sides "},{"type":"element","tag":"a","props":{"href":"https://github.com/adonisjs/lucid/commit/e19bcf05138e862cd90bd410fda8c97c90481c04"},"children":[{"type":"text","value":"e19bcf05"}]},{"type":"text","value":"."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Database<span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">whereColumn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'users.id'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'='</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'user_logins.user_id'</span><span class=\"token punctuation\">)</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The following variations are also added."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"whereColumn"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"orWhereColumn"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"andWhereColumn"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"whereNotColumn"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"orWhereNotColumn"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"andWhereNotColumn"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"addition"}]},{"type":"text","value":": Add support for conditional queries using "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"if"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"unless"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"match"}]},{"type":"text","value":" methods. "},{"type":"element","tag":"a","props":{"href":"https://github.com/adonisjs/lucid/commit/17a9420552c963a00bf0df0f91585d977e534893"},"children":[{"type":"text","value":"17a94205"}]}]},{"type":"element","tag":"div","props":{"className":["tabs"]},"children":[{"type":"element","tag":"div","props":{"className":["tab-head"]},"children":[{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{"dataTitle":"tab-1"},"children":[{"type":"text","value":"if"}]},{"type":"element","tag":"li","props":{"dataTitle":"tab-2"},"children":[{"type":"text","value":"unless"}]},{"type":"element","tag":"li","props":{"dataTitle":"tab-3"},"children":[{"type":"text","value":"match"}]}]}]},{"type":"element","tag":"div","props":{"className":["tab-body"]},"children":[{"type":"element","tag":"div","props":{"className":["tab-item"],"id":"tab-1"},"children":[{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"if"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Database\n  <span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>auth<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>query<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> query<span class=\"token punctuation\">.</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token string\">'user_id'</span><span class=\"token punctuation\">,</span> auth<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n"}]}]}]}]},{"type":"element","tag":"div","props":{"className":["tab-item"],"id":"tab-2"},"children":[{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"unless"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Database\n  <span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">unless</span><span class=\"token punctuation\">(</span>auth<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>query<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> query<span class=\"token punctuation\">.</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token string\">'is_public'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n"}]}]}]}]},{"type":"element","tag":"div","props":{"className":["tab-item"],"id":"tab-3"},"children":[{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"match"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Database\n  <span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">[</span>\n      auth<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>query<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> query<span class=\"token punctuation\">.</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token string\">'user_id'</span><span class=\"token punctuation\">,</span> auth<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span>\n      <span class=\"token operator\">!</span>auth<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>query<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> query<span class=\"token punctuation\">.</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token string\">'is_public'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span>\n"}]}]}]}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"addition"}]},{"type":"text","value":": Introduce "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"selfAssignPrimarykey"}]},{"type":"text","value":" property on models to allow assigning primary key locally. This is useful when using "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"uuid"}]},{"type":"text","value":" as the primary key and not using database to generate one. "},{"type":"element","tag":"a","props":{"href":"https://github.com/adonisjs/lucid/commit/7d3131225aafce91efc830b9ca55e0f46493e2b6"},"children":[{"type":"text","value":"7d313122"}]}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseModel</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> selfAssignPrimarykey <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n\n  @<span class=\"token function\">column</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> isPrimary<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> id<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nuser<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> uuid<span class=\"token punctuation\">.</span><span class=\"token function\">v4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">await</span> user<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"improvement"}]},{"type":"text","value":": Improve pretty print output for SQL queries debugging and migrations dry run. "},{"type":"element","tag":"a","props":{"href":"https://github.com/adonisjs/lucid/commit/6ac54a2db60c8490e85d2c0219bf0081b05fdf96"},"children":[{"type":"text","value":"6ac54a2d"}]}]}]}]}]}
