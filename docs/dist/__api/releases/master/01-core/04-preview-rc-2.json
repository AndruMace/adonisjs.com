{"type":"root","children":[{"type":"element","tag":"dimertitle","props":{},"children":[{"type":"text","value":"Preview release rc-2"}]},{"type":"element","tag":"h1","props":{"id":"preview-release-rc-2"},"children":[{"type":"element","tag":"a","props":{"href":"#preview-release-rc-2","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Preview release "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"rc-2"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We have released "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"@adonisjs/core@5.0.4-preview-rc-2"}]},{"type":"text","value":" on "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"October 23rd, 2020"}]},{"type":"text","value":" and it contains following additions, changes and bug fixes."}]},{"type":"element","tag":"div","props":{"className":["toc-container"]},"children":[{"type":"element","tag":"h2","props":{},"children":[{"type":"text","value":"Table of contents"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#highlights"},"children":[{"type":"text","value":"Highlights"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#http-server"},"children":[{"type":"text","value":"Http Server"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#env"},"children":[{"type":"text","value":"Env"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#validator"},"children":[{"type":"text","value":"Validator"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#application"},"children":[{"type":"text","value":"Application"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#logger"},"children":[{"type":"text","value":"Logger"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"highlights"},"children":[{"type":"element","tag":"a","props":{"href":"#highlights","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Highlights"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Support for in-memory compilition of Typescript. In other words, the development workflow of AdonisJS will no longer write the compiled Javascript to the disk and uses in memory compilition. It has become possible because of the "},{"type":"element","tag":"a","props":{"href":"https://github.com/adonisjs/require-ts"},"children":[{"type":"text","value":"@adonisjs/require-ts"}]},{"type":"text","value":" module."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Ability to validate environment variables. Learn more about it "},{"type":"element","tag":"a","props":{"href":""},"children":[{"type":"text","value":"here"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Introducing "},{"type":"element","tag":"a","props":{"href":"https://github.com/adonisjs/repl"},"children":[{"type":"text","value":"@adonisjs/repl"}]}]}]},{"type":"element","tag":"h2","props":{"id":"http-server"},"children":[{"type":"element","tag":"a","props":{"href":"#http-server","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Http Server"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"addition"}]},{"type":"text","value":": Adding "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"request.param"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"request.params"}]},{"type":"text","value":" methods as an alternative to read the route params. "},{"type":"element","tag":"a","props":{"href":"https://github.com/adonisjs/http-server/commit/06c0f0ebc2b416bddfdc8c2929f867e6a42e67e1"},"children":[{"type":"text","value":"06c0f0ebc"}]}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Route<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'users/:id'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> request<span class=\"token punctuation\">,</span> params <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// Same as the above</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">param</span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"improvement"}]},{"type":"text","value":": Simplify creation of HTTP context instance using "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"HttpContext.create"}]},{"type":"text","value":" method. This is useful when you are trying to unit test a piece of code that needs the HTTP context. For example: Unit testing a middleware. "},{"type":"element","tag":"a","props":{"href":"https://github.com/adonisjs/http-server/commit/75fcbc6b0bfac7cc9356428668b3849127019740"},"children":[{"type":"text","value":"75fcbc6b0"}]}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">class</span> <span class=\"token class-name\">SomeMiddleware</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token function\">handle</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// inside some test file</span>\n<span class=\"token keyword\">import</span> HttpContext <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/HttpContext'</span>\n\n<span class=\"token keyword\">const</span> ctx <span class=\"token operator\">=</span> HttpContext<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">'users/:id'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">await</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SomeMiddleware</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">handle</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>\n"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"improvement"}]},{"type":"text","value":": "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"POTENTIONAL BREAKING CHANGE"}]},{"type":"text","value":" The "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"response.redirect().withQs()"}]},{"type":"text","value":" method now merges the query strings together when called multiple times. Earlier, it used to overwrite the previous values leading to difficulties when trying to append to the current request query string. For example:"}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token comment\">// REQUEST URL: /users?page=1&amp;limit=10</span>\n\n<span class=\"token comment\">// EARLIER OUTPUT: /users?sort=popular</span>\nresponse<span class=\"token punctuation\">.</span><span class=\"token function\">redirect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">withQs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">withQs</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sort'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'popular'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// CURRENT OUTPUT: /users?page=1&amp;limit=10&amp;sort=popular</span>\nresponse<span class=\"token punctuation\">.</span><span class=\"token function\">redirect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">withQs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">withQs</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sort'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'popular'</span><span class=\"token punctuation\">)</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you want to clean up existing query string, then you can make use of the newly added "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"cleanQs"}]},{"type":"text","value":" method. "},{"type":"element","tag":"a","props":{"href":"https://github.com/adonisjs/http-server/commit/545e606ff844f5e3f0a7e0dc10123be40cb63fad"},"children":[{"type":"text","value":"545e606ff8"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"env"},"children":[{"type":"element","tag":"a","props":{"href":"#env","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Env"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"a","props":{"href":"http://github.com/adonisjs/env"},"children":[{"type":"text","value":"@adonisjs/env"}]},{"type":"text","value":" package has received a bunch of improvements including the support for validating environment variables."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"addition"}]},{"type":"text","value":": Support for validating environment variables. Begin by creating "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"env.ts"}]},{"type":"text","value":" file inside the project root. "},{"type":"element","tag":"a","props":{"href":"https://github.com/adonisjs/env/commit/1598512226723d786b8188af6a0d456fc882fe86"},"children":[{"type":"text","value":"15985122"}]},{"type":"text","value":"."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"span","props":{"className":["filename"]},"children":[{"type":"text","value":"env.ts"}]},{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">import</span> Env <span class=\"token keyword\">from</span> <span class=\"token string\">'@ioc:Adonis/Core/Env'</span>\n\nEnv<span class=\"token punctuation\">.</span><span class=\"token function\">rules</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token constant\">APP_KEY</span><span class=\"token operator\">:</span> Env<span class=\"token punctuation\">.</span>schema<span class=\"token punctuation\">.</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">HOST</span><span class=\"token operator\">:</span> Env<span class=\"token punctuation\">.</span>schema<span class=\"token punctuation\">.</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> format<span class=\"token operator\">:</span> <span class=\"token string\">'host'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"improvement"}]},{"type":"text","value":": Make existence of "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":".env"}]},{"type":"text","value":" file optional. The validations should take care of ensuring that all required environment variables exists. "},{"type":"element","tag":"a","props":{"href":"https://github.com/adonisjs/env/commit/6e3f2851ee426f87c7de147a555e297fd5228d13"},"children":[{"type":"text","value":"6e3f2851"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"remove"}]},{"type":"text","value":": Depreciate "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Env.getOrFail"}]},{"type":"text","value":" method and hence validations should handle the existence of a variable. "},{"type":"element","tag":"a","props":{"href":"https://github.com/adonisjs/env/commit/f555e8a8f2840d8b79489dd499c7e1e94966a20a"},"children":[{"type":"text","value":"f555e8a8"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"validator"},"children":[{"type":"element","tag":"a","props":{"href":"#validator","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Validator"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"improvement"}]},{"type":"text","value":": Cache validation schema using LRU cache. The maximum limit is hardcoded to cache a total of 100 schemas (should be enough for majority of applications). "},{"type":"element","tag":"a","props":{"href":"https://github.com/adonisjs/validator/commit/f19a6312e335d423b80acb7260e2585d883c7475"},"children":[{"type":"text","value":"f19a6312e3"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"fix"}]},{"type":"text","value":": Bug fix for "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"array.anyMembers"}]},{"type":"text","value":". The method was never implemented but was documented. "},{"type":"element","tag":"a","props":{"href":"https://github.com/adonisjs/validator/commit/866cb4522d5e1966cd93dec8ec39633b95119c28"},"children":[{"type":"text","value":"866cb452"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"feat"}]},{"type":"text","value":": Expose the validator config to customize certain aspects of the validation. You can define the following object inside the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"config/app.ts"}]},{"type":"text","value":" file. "},{"type":"element","tag":"a","props":{"href":"https://github.com/adonisjs/validator/commit/12d116f254b7138cbbedc3e2fd0648d273aca990"},"children":[{"type":"text","value":"12d116f254"}]}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> validator <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  bail<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// stop after first validation error (default to \"false\")</span>\n  existsStrict<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// only consider undefined and null as missing values (default to \"false\")</span>\n  <span class=\"token function-variable function\">reporter</span><span class=\"token operator\">:</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@ioc:Adonis/Core/Validator'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>validator<span class=\"token punctuation\">.</span>reporters<span class=\"token punctuation\">.</span>api\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// define a custom reporter for all validations</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"feat"}]},{"type":"text","value":": Allow customizing the negotiator function to decide the error reporter when using "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"request.validate"}]},{"type":"text","value":" method. This will allow 3rd party packages like InertiaJS to use a custom function for handling validation failures. "},{"type":"element","tag":"a","props":{"href":"https://github.com/adonisjs/validator/blob/develop/src/Validator/helpers.ts#L170"},"children":[{"type":"text","value":"Here's the default implementation"}]},{"type":"text","value":" of the negotiator function."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">class</span> <span class=\"token class-name\">MyProvider</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">boot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> validator <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Adonis/Core/Validator'</span><span class=\"token punctuation\">)</span>\n    validator<span class=\"token punctuation\">.</span><span class=\"token function\">negotiator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// return an error reporter to be used</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"application"},"children":[{"type":"element","tag":"a","props":{"href":"#application","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Application"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"addition"}]},{"type":"text","value":": Add methods to setup the AdonisJS application. Earlier ignitor was responsible for doing this, but we have moved the core the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Application"}]},{"type":"text","value":" class. This is useful for developing packages, as you can quickly setup an AdonisJS application and test your package against it. "},{"type":"element","tag":"a","props":{"href":"https://github.com/adonisjs/application/commit/814500b23f4d4ae9292f263a0ed25aeb34b6fde1"},"children":[{"type":"text","value":"814500b2"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"addition"}]},{"type":"text","value":": Introduce additional "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"repl"}]},{"type":"text","value":" environment. After this, AdonisJS has a total of four environments, i.e: "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"web"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"console"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"test"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"repl"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"h2","props":{"id":"logger"},"children":[{"type":"element","tag":"a","props":{"href":"#logger","aria-hidden":true},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Logger"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"addition"}]},{"type":"text","value":": Add keywords to format the timestamps for the log messages. "},{"type":"element","tag":"a","props":{"href":"https://github.com/adonisjs/logger/commit/9512240537562e06fea340fb32900128f757b1c3"},"children":[{"type":"text","value":"95122405"}]},{"type":"text","value":". The keywords are "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"iso"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"unix"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"epoch"}]},{"type":"text","value":" and can be used inside the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"config/app.ts"}]},{"type":"text","value":" file as follows:"}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> logger <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  enabled<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  timestamp<span class=\"token operator\">:</span> <span class=\"token string\">'iso'</span>\n<span class=\"token punctuation\">}</span>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Alternatively, you can define a custom function as well."}]},{"type":"element","tag":"div","props":{"className":["dimer-highlight"]},"children":[{"type":"element","tag":"pre","props":{"className":["language-ts","line-numbers"]},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<span class=\"token function-variable function\">timestamp</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">,\"time\":</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n"}]}]}]}]}]}]}
